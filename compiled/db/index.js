const mongoose = require('mongoose');

let fOneSchema = mongoose.Schema({
  name: String,
  email: String,
  password: String
}, { timestamps: true });

let fTwoSchema = mongoose.Schema({
  lineOne: String,
  lineTwo: String,
  city: String,
  state: String,
  zipCode: Number
}, { timestamps: true });

let fThreeSchema = mongoose.Schema({
  card: Number,
  expDate: String,
  cvv: Number,
  billingZipCode: Number
}, { timestamps: true });

let fOne = mongoose.model('fOne', fOneSchema);
let fTwo = mongoose.model('fTwo', fTwoSchema);
let fThree = mongoose.model('fThree', fThreeSchema);

module.exports.fOne = fOne;
module.exports.fTwo = fTwo;
module.exports.fThree = fThree;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2RiL2luZGV4LmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsImZPbmVTY2hlbWEiLCJTY2hlbWEiLCJuYW1lIiwiU3RyaW5nIiwiZW1haWwiLCJwYXNzd29yZCIsInRpbWVzdGFtcHMiLCJmVHdvU2NoZW1hIiwibGluZU9uZSIsImxpbmVUd28iLCJjaXR5Iiwic3RhdGUiLCJ6aXBDb2RlIiwiTnVtYmVyIiwiZlRocmVlU2NoZW1hIiwiY2FyZCIsImV4cERhdGUiLCJjdnYiLCJiaWxsaW5nWmlwQ29kZSIsImZPbmUiLCJtb2RlbCIsImZUd28iLCJmVGhyZWUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxXQUFXQyxRQUFRLFVBQVIsQ0FBakI7O0FBRUEsSUFBSUMsYUFBYUYsU0FBU0csTUFBVCxDQUFnQjtBQUMvQkMsUUFBTUMsTUFEeUI7QUFFL0JDLFNBQU9ELE1BRndCO0FBRy9CRSxZQUFVRjtBQUhxQixDQUFoQixFQUlkLEVBQUVHLFlBQVksSUFBZCxFQUpjLENBQWpCOztBQU1BLElBQUlDLGFBQWFULFNBQVNHLE1BQVQsQ0FBZ0I7QUFDL0JPLFdBQVNMLE1BRHNCO0FBRS9CTSxXQUFTTixNQUZzQjtBQUcvQk8sUUFBTVAsTUFIeUI7QUFJL0JRLFNBQU9SLE1BSndCO0FBSy9CUyxXQUFTQztBQUxzQixDQUFoQixFQU1kLEVBQUVQLFlBQVksSUFBZCxFQU5jLENBQWpCOztBQVFBLElBQUlRLGVBQWVoQixTQUFTRyxNQUFULENBQWdCO0FBQ2pDYyxRQUFNRixNQUQyQjtBQUVqQ0csV0FBU2IsTUFGd0I7QUFHakNjLE9BQUtKLE1BSDRCO0FBSWpDSyxrQkFBZ0JMO0FBSmlCLENBQWhCLEVBS2hCLEVBQUVQLFlBQVksSUFBZCxFQUxnQixDQUFuQjs7QUFPQSxJQUFJYSxPQUFPckIsU0FBU3NCLEtBQVQsQ0FBZSxNQUFmLEVBQXVCcEIsVUFBdkIsQ0FBWDtBQUNBLElBQUlxQixPQUFPdkIsU0FBU3NCLEtBQVQsQ0FBZSxNQUFmLEVBQXVCYixVQUF2QixDQUFYO0FBQ0EsSUFBSWUsU0FBU3hCLFNBQVNzQixLQUFULENBQWUsUUFBZixFQUF5Qk4sWUFBekIsQ0FBYjs7QUFFQVMsT0FBT0MsT0FBUCxDQUFlTCxJQUFmLEdBQXNCQSxJQUF0QjtBQUNBSSxPQUFPQyxPQUFQLENBQWVILElBQWYsR0FBc0JBLElBQXRCO0FBQ0FFLE9BQU9DLE9BQVAsQ0FBZUYsTUFBZixHQUF3QkEsTUFBeEIiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XHJcblxyXG5sZXQgZk9uZVNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYSh7XHJcbiAgbmFtZTogU3RyaW5nLFxyXG4gIGVtYWlsOiBTdHJpbmcsXHJcbiAgcGFzc3dvcmQ6IFN0cmluZ1xyXG59LCB7IHRpbWVzdGFtcHM6IHRydWUgfSk7XHJcblxyXG5sZXQgZlR3b1NjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYSh7XHJcbiAgbGluZU9uZTogU3RyaW5nLFxyXG4gIGxpbmVUd286IFN0cmluZyxcclxuICBjaXR5OiBTdHJpbmcsXHJcbiAgc3RhdGU6IFN0cmluZyxcclxuICB6aXBDb2RlOiBOdW1iZXJcclxufSwgeyB0aW1lc3RhbXBzOiB0cnVlIH0pO1xyXG5cclxubGV0IGZUaHJlZVNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYSh7XHJcbiAgY2FyZDogTnVtYmVyLFxyXG4gIGV4cERhdGU6IFN0cmluZyxcclxuICBjdnY6IE51bWJlcixcclxuICBiaWxsaW5nWmlwQ29kZTogTnVtYmVyXHJcbn0sIHsgdGltZXN0YW1wczogdHJ1ZSB9KTtcclxuXHJcbmxldCBmT25lID0gbW9uZ29vc2UubW9kZWwoJ2ZPbmUnLCBmT25lU2NoZW1hKTtcclxubGV0IGZUd28gPSBtb25nb29zZS5tb2RlbCgnZlR3bycsIGZUd29TY2hlbWEpO1xyXG5sZXQgZlRocmVlID0gbW9uZ29vc2UubW9kZWwoJ2ZUaHJlZScsIGZUaHJlZVNjaGVtYSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cy5mT25lID0gZk9uZTtcclxubW9kdWxlLmV4cG9ydHMuZlR3byA9IGZUd287XHJcbm1vZHVsZS5leHBvcnRzLmZUaHJlZSA9IGZUaHJlZTsiXX0=